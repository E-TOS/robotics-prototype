// Generated by gencpp from file mux_selector/SelectMux.msg
// DO NOT EDIT!


#ifndef MUX_SELECTOR_MESSAGE_SELECTMUX_H
#define MUX_SELECTOR_MESSAGE_SELECTMUX_H

#include <ros/service_traits.h>


#include <mux_selector/SelectMuxRequest.h>
#include <mux_selector/SelectMuxResponse.h>


namespace mux_selector
{

struct SelectMux
{

typedef SelectMuxRequest Request;
typedef SelectMuxResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SelectMux
} // namespace mux_selector


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::mux_selector::SelectMux > {
  static const char* value()
  {
    return "ab715037a08c21b05b5bea5be576ffea";
  }

  static const char* value(const ::mux_selector::SelectMux&) { return value(); }
};

template<>
struct DataType< ::mux_selector::SelectMux > {
  static const char* value()
  {
    return "mux_selector/SelectMux";
  }

  static const char* value(const ::mux_selector::SelectMux&) { return value(); }
};


// service_traits::MD5Sum< ::mux_selector::SelectMuxRequest> should match 
// service_traits::MD5Sum< ::mux_selector::SelectMux > 
template<>
struct MD5Sum< ::mux_selector::SelectMuxRequest>
{
  static const char* value()
  {
    return MD5Sum< ::mux_selector::SelectMux >::value();
  }
  static const char* value(const ::mux_selector::SelectMuxRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::mux_selector::SelectMuxRequest> should match 
// service_traits::DataType< ::mux_selector::SelectMux > 
template<>
struct DataType< ::mux_selector::SelectMuxRequest>
{
  static const char* value()
  {
    return DataType< ::mux_selector::SelectMux >::value();
  }
  static const char* value(const ::mux_selector::SelectMuxRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::mux_selector::SelectMuxResponse> should match 
// service_traits::MD5Sum< ::mux_selector::SelectMux > 
template<>
struct MD5Sum< ::mux_selector::SelectMuxResponse>
{
  static const char* value()
  {
    return MD5Sum< ::mux_selector::SelectMux >::value();
  }
  static const char* value(const ::mux_selector::SelectMuxResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::mux_selector::SelectMuxResponse> should match 
// service_traits::DataType< ::mux_selector::SelectMux > 
template<>
struct DataType< ::mux_selector::SelectMuxResponse>
{
  static const char* value()
  {
    return DataType< ::mux_selector::SelectMux >::value();
  }
  static const char* value(const ::mux_selector::SelectMuxResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MUX_SELECTOR_MESSAGE_SELECTMUX_H
